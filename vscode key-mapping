// Place your key bindings in this file to override the defaults
[
  // Navigation
  {
    "key": "ctrl-h",
    "command": "workbench.action.navigateLeft"
  },
  {
    "key": "ctrl-l",
    "command": "workbench.action.navigateRight"
  },
  {
    "key": "ctrl-j",
    "command": "workbench.action.navigateDown"
  },
  {
    "key": "ctrl-k",
    "command": "workbench.action.navigateUp,"
  },
  {
    "key": "space p e",
    "command": "workbench.action.showAllEditors",
    "when": "vim.mode === 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "vim.mode === 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "tab",
    "command": "workbench.action.nextEditorInGroup",
    "when": "(vim.mode === 'Normal' || vim.mode === 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "shift-tab",
    "command": "workbench.action.previousEditorInGroup",
    "when": "(vim.mode === 'Normal' || vim.mode === 'Visual') && (editorTextFocus || !inputFocus)"
  },

  // coding
  {
    "key": "shift-j",
    "command": "editor.action.moveLinesDownAction",
    "when": "vim.mode !== 'Insert' && editorTextFocus"
  },
  {
    "key": "shift-k",
    "command": "editor.action.moveLinesUpAction",
    "when": "vim.mode !== 'Insert' && editorTextFocus"
  },
  {
    "key": "shift-h",
    "command": "editor.action.showHover",
    "when": "vim.mode === 'Normal' && editorTextFocus"
  },
  {
    "key": "space c a",
    "command": "editor.action.codeAction",
    "when": "vim.mode === 'Normal' && editorTextFocus"
  },
  {
    "key": "space v r",
    "command": "editor.action.rename",
    "when": "vim.mode === 'Normal' && editorTextFocus"
  },
  {
    "key": "space p s",
    "command": "workbench.action.gotoSymbol",
    "when": "vim.mode === 'Normal' && editorTextFocus"
  },
  {
    "key": "space w",
    "command": "workbench.action.closeActiveEditor",
    "when": "vim.mode === 'Normal' && editorTextFocus"
  },
  {
    "key": "space p f",
    "command": "workbench.action.quickOpen",
    "when": "vim.mode === 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space p s",
    "command": "workbench.action.findInFiles",
    "when": "vim.mode === 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "space g r",
    "command": "editor.action.goToReferences",
    "when": "vim.mode === 'Normal' && editorTextFocus"
  },
  {
    "key": "space s g",
    "command": "workbench.action.findInFiles",
    "when": "vim.mode === 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "key": "ctrl-m",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "(vim.mode === 'Normal' || vim.mode === 'Visual') && (editorTextFocus || !inputFocus)"
  },

  // explorer
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "c",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "a",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },

  //split
  {
    "key": "space s v",
    "command": "explorer.openToSide",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  }
]
